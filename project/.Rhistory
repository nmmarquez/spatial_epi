spatial_covs <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]), exp(mean_[,x] + prec * u[,x])))
both_covs <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]),
exp(mean_[,x] + prec * (sqrt(1 - phi[x]) * v[,x] + sqrt(phi[x]) * u[,x]))))
sp@data[,paste0("v", 1:100)] <- v
sp@data[,paste0("u", 1:100)] <- u
sp@data[,paste0("x1", 1:100)] <- x1
sp@data[,paste0("x2", 1:100)] <- x2
sp@data[,paste0("random", 1:100)] <- random
sp@data[,paste0("spatial", 1:100)] <- spatial
sp@data[,paste0("both", 1:100)] <- both
sp@data[,paste0("random_covs", 1:100)] <- random_covs
sp@data[,paste0("spatial_covs", 1:100)] <- spatial_covs
sp@data[,paste0("both_covs", 1:100)] <- both_covs
sp
}
state_data <- apply2(delta_simulatar,"SpatialPolygons", state_data)
library(MASS)
state_data <- apply2(delta_simulatar,"SpatialPolygons", state_data)
plot_ca_tn <- function(sim_num){
ca_datur <- state_data$California$SpatialPolygons
tn_datur <- state_data$Tennessee$SpatialPolygons
spat_text <- "Simulated Spatial Random Effects"
od_text <- "Simulated Overdispersion Random Effects"
p1 <- spplot(ca_datur, paste0("spatial", sim_num), main=spat_text)
p2 <- spplot(ca_datur, paste0("random", sim_num), main=od_text)
p3 <- spplot(tn_datur, paste0("spatial", sim_num), main=spat_text)
p4 <- spplot(tn_datur, paste0("random", sim_num), main=od_text)
print(p1, position=c(0, .5, .5, 1), more=T)
print(p2, position=c(.5, .5, 1, 1), more=T)
print(p3, position=c(0, 0, .5, .5), more=T)
print(p4, position=c(.5, 0, 1, .5))
}
plot_ca_tn(100)
nrow(state_data$California$SpatialPolygons)
nrow(state_data$Tennessee$SpatialPolygons)
df <- state_data$Tennessee$SpatialPolygons@data
adj <- state_data$Tennessee$adjmat
summary(inla(random_covs100 ~ x1100 + x2100 +
f(ID, model = "iid", param = c(1, 0.014)),
data=df, family="poisson"))
summary(inla(spatial_covs100 ~ x1100 + x2100 +
f(ID, model = "iid", param = c(1, 0.014)),
data=df, family="poisson"))
summary(inla(spatial_covs100 ~ x1100 + x2100 +
f(ID, model="besag", graph=adj,
param = c(1, 0.68)),
data=df, family="poisson"))
summary(inla(spatial_covs100 ~ x1100 + x2100 + f(ID, model="bym2", graph=adj),
data=df, family="poisson",verbose=T))
summary(inla(spatial_covs100 ~ x1100 + x2100 + f(ID, model="bym2", graph=adj),
data=df, family="poisson"))
summary(inla(spatial100 ~ 1 + f(ID, model="bym2", graph=adj),
data=df, family="poisson"))
summary(inla(spatial_covs1 ~ x11 + x21 + f(ID, model="bym2", graph=adj),
data=df, family="poisson"))
formula <- spatial1 ~ 1 +
f(ID, model = "bym2", scale.model=T, constr=T, graph=adj,
hyper=list(phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3),
prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))))
result <- inla(formula , data=df,
family="poisson", control.predictor=list(compute=T))
# get improved estimates for the h y p e r p a r a m e t e r s
summary(result)
formula <- both1 ~ 1 +
f(ID, model = "bym2", scale.model=T, constr=T, graph=adj,
hyper=list(phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3),
prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))))
# call the inla function
result <- inla(formula , data=df,
family="poisson", control.predictor=list(compute=T))
# get improved estimates for the h y p e r p a r a m e t e r s
summary(result)
formula <- both100 ~ 1 +
f(ID, model = "bym2", scale.model=T, constr=T, graph=adj,
hyper=list(phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3),
prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))))
# call the inla function
result <- inla(formula , data=df,
family="poisson", control.predictor=list(compute=T))
# get improved estimates for the h y p e r p a r a m e t e r s
summary(result)
?"inla.hyperpar"
result <- inla.hyperpar(result , dz=0.2 , diff.logdens=20)
summary(result)
set.seed(123)
rm(list=ls())
library(SpatialEpi)
library(spdep)
library(INLA)
library(RColorBrewer)
library(maptools)
library(maps)
library(ggplot2)
library(sp)
library(lattice)
library(surveillance)
library(parallel)
library(MASS)
phi <- seq(0.01,1,.01)
## Get Pennsylvania map file
setwd("~/Documents/Classes/spatial_epi/project/")
load("../homework/hw3/USA_adm2.RData") # From http://gadm.org/
cont_usa_locs <- c("Texas", "Louisiana", "Arkansas", "Oklahoma")
cont_usa <- gadm[(gadm@data$NAME_1 %in% cont_usa_locs),]
set.seed(123)
rm(list=ls())
library(SpatialEpi)
library(spdep)
library(INLA)
library(RColorBrewer)
library(maptools)
library(maps)
library(ggplot2)
library(sp)
library(lattice)
library(surveillance)
library(parallel)
library(MASS)
phi <- seq(0.01,1,.01)
## Get Pennsylvania map file
setwd("~/Documents/Classes/spatial_epi/project/")
load("../homework/hw3/USA_adm2.RData") # From http://gadm.org/
cont_usa_locs <- c("Texas", "Louisiana")
cont_usa <- gadm[(gadm@data$NAME_1 %in% cont_usa_locs),]
cont_usa <- list(name="cont_usa", "SpatialPolygons" = cont_usa)
state_data <- apply2(function(x) poly2adjmat(x$SpatialPolygons),
"adjmat", state_data, cores=3)
cont_usa$adj_mat <- poly2adjmat(cont_usa$SpatialPolygons)
simulate_sre <- function(Q){
n <- nrow(Q)
Qs <- inla.scale.model(Q, constr=list(A=matrix(1, nrow=1, ncol=n), e=0))
Q_star <- ginv(as.matrix(Qs))
t(mvrnorm(n=100, 0 * 1:n, Q_star))
}
delta_simulatar <- function(unit){
# Given a spatial polygons data set applies
# a delta to each unit
sp <- unit$SpatialPolygons
N <- length(sp) # number of counties in a state unit
sp$ID <- 1:N
n_delta_i <- rowSums(unit$adjmat)
Q <- unit$adjmat * -1
diag(Q) <- n_delta_i
v <- sapply(1:100, function(x) rnorm(length(sp), 0, 1))
u <- sapply(1:100, function(x) simulate_sre(Q))
x1 <- sapply(1:100, function(x)rnorm(length(sp)))
x2 <- sapply(1:100, function(x)rnorm(length(sp)))
beta1 <- 2
beta2 <- -3
prec <- 1/sqrt(.5)
mean_ <- beta1 * x1 + beta2 * x2
random <- sapply(1:ncol(v), function(x)
rpois(length(v[,x]), exp(prec * v[,x])))
spatial <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]), exp(prec * u[,x])))
both <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]),
exp(prec * (sqrt(1 - phi[x]) * v[,x] + sqrt(phi[x]) * u[,x]))))
random_covs <- sapply(1:ncol(v), function(x)
rpois(length(v[,x]), exp(mean_[,x] + prec * v[,x])))
spatial_covs <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]), exp(mean_[,x] + prec * u[,x])))
both_covs <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]),
exp(mean_[,x] + prec * (sqrt(1 - phi[x]) * v[,x] + sqrt(phi[x]) * u[,x]))))
sp@data[,paste0("v", 1:100)] <- v
sp@data[,paste0("u", 1:100)] <- u
sp@data[,paste0("x1", 1:100)] <- x1
sp@data[,paste0("x2", 1:100)] <- x2
sp@data[,paste0("random", 1:100)] <- random
sp@data[,paste0("spatial", 1:100)] <- spatial
sp@data[,paste0("both", 1:100)] <- both
sp@data[,paste0("random_covs", 1:100)] <- random_covs
sp@data[,paste0("spatial_covs", 1:100)] <- spatial_covs
sp@data[,paste0("both_covs", 1:100)] <- both_covs
sp
}
colSums(cont_usa$adj_mat)
colSums(cont_usa$adj_mat) == 0
any(colSums(cont_usa$adj_mat) == 0)
delta_simulatar <- function(unit){
# Given a spatial polygons data set applies
# a delta to each unit
sp <- unit$SpatialPolygons
N <- length(sp) # number of counties in a state unit
M <- 100 # number of simulations
sp$ID <- 1:N
n_delta_i <- rowSums(unit$adjmat)
Q <- unit$adjmat * -1
diag(Q) <- n_delta_i
print("qflipped")
v <- sapply(1:M, function(x) rnorm(length(sp), 0, 1))
print("v created")
u <- sapply(1:M, function(x) simulate_sre(Q, M=M))
print("u created")
x1 <- sapply(1:M, function(x)rnorm(length(sp)))
x2 <- sapply(1:M, function(x)rnorm(length(sp)))
print("x created")
beta1 <- 2
beta2 <- -3
prec <- 1/sqrt(.5)
mean_ <- beta1 * x1 + beta2 * x2
random <- sapply(1:ncol(v), function(x)
rpois(length(v[,x]), exp(prec * v[,x])))
spatial <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]), exp(prec * u[,x])))
both <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]),
exp(prec * (sqrt(1 - phi[x]) * v[,x] + sqrt(phi[x]) * u[,x]))))
print("constant created")
random_covs <- sapply(1:ncol(v), function(x)
rpois(length(v[,x]), exp(mean_[,x] + prec * v[,x])))
spatial_covs <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]), exp(mean_[,x] + prec * u[,x])))
both_covs <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]),
exp(mean_[,x] + prec * (sqrt(1 - phi[x]) * v[,x] + sqrt(phi[x]) * u[,x]))))
print("cov adjusted created")
sp@data[,paste0("v", 1:M)] <- v
sp@data[,paste0("u", 1:M)] <- u
sp@data[,paste0("x1", 1:M)] <- x1
sp@data[,paste0("x2", 1:M)] <- x2
sp@data[,paste0("random", 1:M)] <- random
sp@data[,paste0("spatial", 1:M)] <- spatial
sp@data[,paste0("both", 1:M)] <- both
sp@data[,paste0("random_covs", 1:M)] <- random_covs
sp@data[,paste0("spatial_covs", 1:M)] <- spatial_covs
sp@data[,paste0("both_covs", 1:M)] <- both_covs
sp
}
cont_usa$SpatialPolygons <- delta_simulatar(cont_usa)
cont_usa$adj_mat
dim(cont_usa$adj_mat)
cont_usa$adjmat <- poly2adjmat(cont_usa$SpatialPolygons)
cont_usa$SpatialPolygons <- delta_simulatar(cont_usa)
simulate_sre <- function(Q, M){
n <- nrow(Q)
Qs <- inla.scale.model(Q, constr=list(A=matrix(1, nrow=1, ncol=n), e=0))
Q_star <- ginv(as.matrix(Qs))
t(mvrnorm(n=M, 0 * 1:n, Q_star))
}
cont_usa$SpatialPolygons <- delta_simulatar(cont_usa)
delta_simulatar <- function(unit){
# Given a spatial polygons data set applies
# a delta to each unit
sp <- unit$SpatialPolygons
N <- length(sp) # number of counties in a state unit
M <- 100 # number of simulations
sp$ID <- 1:N
n_delta_i <- rowSums(unit$adjmat)
Q <- unit$adjmat * -1
diag(Q) <- n_delta_i
print("qflipped")
v <- sapply(1:M, function(x) rnorm(length(sp), 0, 1))
print("v created")
u <- simulate_sre(Q, M=M)
print("u created")
x1 <- sapply(1:M, function(x)rnorm(length(sp)))
x2 <- sapply(1:M, function(x)rnorm(length(sp)))
print("x created")
beta1 <- 2
beta2 <- -3
prec <- 1/sqrt(.5)
mean_ <- beta1 * x1 + beta2 * x2
random <- sapply(1:ncol(v), function(x)
rpois(length(v[,x]), exp(prec * v[,x])))
spatial <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]), exp(prec * u[,x])))
both <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]),
exp(prec * (sqrt(1 - phi[x]) * v[,x] + sqrt(phi[x]) * u[,x]))))
print("constant created")
random_covs <- sapply(1:ncol(v), function(x)
rpois(length(v[,x]), exp(mean_[,x] + prec * v[,x])))
spatial_covs <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]), exp(mean_[,x] + prec * u[,x])))
both_covs <- sapply(1:ncol(u), function(x)
rpois(length(u[,x]),
exp(mean_[,x] + prec * (sqrt(1 - phi[x]) * v[,x] + sqrt(phi[x]) * u[,x]))))
print("cov adjusted created")
sp@data[,paste0("v", 1:M)] <- v
sp@data[,paste0("u", 1:M)] <- u
sp@data[,paste0("x1", 1:M)] <- x1
sp@data[,paste0("x2", 1:M)] <- x2
sp@data[,paste0("random", 1:M)] <- random
sp@data[,paste0("spatial", 1:M)] <- spatial
sp@data[,paste0("both", 1:M)] <- both
sp@data[,paste0("random_covs", 1:M)] <- random_covs
sp@data[,paste0("spatial_covs", 1:M)] <- spatial_covs
sp@data[,paste0("both_covs", 1:M)] <- both_covs
sp
}
cont_usa$SpatialPolygons <- delta_simulatar(cont_usa)
phi <- seq(0.01,1,.001)
source('~/Documents/Classes/spatial_epi/project/project_outlay.r', echo=TRUE)
sim_num=100
spplot(cont_usa$SpatialPolygons, paste0("spatial", sim_num), main=spat_text)
spat_text=""
spplot(cont_usa$SpatialPolygons, paste0("spatial", sim_num), main=spat_text)
spat_text="spatial"
od_text="overdispersion"
spplot(cont_usa$SpatialPolygons, paste0("spatial", sim_num), main=spat_text)
spplot(cont_usa$SpatialPolygons, paste0("random", sim_num), main=od_text)
head(cont_usa$SpatialPolygons@data)
spplot(cont_usa$SpatialPolygons, paste0("u", sim_num), main=spat_text)
spplot(cont_usa$SpatialPolygons, paste0("v", sim_num), main=od_text)
sim_num=10
spat_text="spatial"
od_text="overdispersion"
spplot(cont_usa$SpatialPolygons, paste0("u", sim_num), main=spat_text)
spplot(cont_usa$SpatialPolygons, paste0("v", sim_num), main=od_text)
df <- cont_usa$SpatialPolygons@data
adj <- cont_usa$adjmat
summary(inla(spatial_covs100 ~ x1100 + x2100 +
f(ID, model = "iid", param = c(1, 0.014)),
data=df, family="poisson"))
summary(inla(spatial_covs100 ~ x1100 + x2100 +
f(ID, model="besag", graph=adj,
param = c(1, 0.68)),
data=df, family="poisson"))
summary(inla(spatial_covs1 ~ x11 + x21 + f(ID, model="bym2", graph=adj),
data=df, family="poisson"))
# specify the latent structure using a formula object
formula <- spatial_covs1 ~ x11 + x21
f(ID, model = "bym2", scale.model=T, constr=T, graph=adj,
hyper=list(phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3),
prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))))
formula <- spatial_covs1 ~ x11 + x21
f(ID, model = "bym2", scale.model=T, constr=T, graph=adj,
hyper=list(phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3),
prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))))
formula <- spatial_covs1 ~ x11 + x21 +
f(ID, model = "bym2", scale.model=T, constr=T, graph=adj,
hyper=list(phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3),
prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))))
# call the inla function
result <- inla(formula , data=df,
family="poisson", control.predictor=list(compute=T))
result <- inla.hyperpar(result , dz=0.2 , diff.logdens=20)
summary(result)
?seq
phi <- seq(0.01,1,length.out=M)
M <- 100 # number of simulations
phi <- seq(0.01,1,length.out=M)
1/M
1/1000
phi <- seq(1/M,1,length.out=M)
?f
?"inla"
formula("spatial_covs100 ~ x1100 + x2100")
test <- formula("spatial_covs100 ~ x1100 + x2100") + f(ID, model = "iid", param = c(1, 0.014))
test <- formula("spatial_covs100 ~ x1100 + x2100 + f(ID, model = "iid", param = c(1, 0.014))")
test <- formula('spatial_covs100 ~ x1100 + x2100 + f(ID, model = "iid", param = c(1, 0.014))')
test <- formula('spatial_covs100 ~ x1100 + x2100 + f(ID, model = "iid", param = c(1, 0.014))')
test
summary(inla(test, data=df, family="poisson"))
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), '
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('hyper=list(', phi_str, prec_str, ")")
form <- paste0(base, hyper, ")")
form
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), '
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
form <- paste0(base, hyper, ")")
print(form)
cat(form)
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
form <- paste0(base, hyper, ")")
cat(form)
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n\t'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
form <- paste0(base, hyper, ")")
cat(form)
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n\t\t'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
form <- paste0(base, hyper, ")")
cat(form)
re <- paste0(base, hyper, ")")
i=1
paste0("spatial_covs", i, " ~ x1", i," + x2", i," +")
run_model <- function(i, covs){
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n\t\t'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
re <- paste0(base, hyper, ")")
if(covs){
mean_ <- paste0("both_covs", i, " ~ x1", i," + x2", i," + ")
}
else{
mean_ <- paste0("both", i, " 1 + ")
}
form <- formula(paste0(mean_ + re))
}
run_model <- function(i, covs){
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n\t\t'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
re <- paste0(base, hyper, ")")
if(covs){
mean_ <- paste0("both_covs", i, " ~ x1", i," + x2", i," + ")
}
else{
mean_ <- paste0("both", i, " 1 + ")
}
form <- formula(paste0(mean_ + re))
form
}
run_model(1, T)
run_model <- function(i, covs){
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n\t\t'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
re <- paste0(base, hyper, ")")
if(covs){
mean_ <- paste0("both_covs", i, " ~ x1", i," + x2", i," + ")
}
else{
mean_ <- paste0("both", i, " 1 + ")
}
form <- formula(paste0(mean_, re))
form
}
run_model(1, T)
run_model <- function(i, covs){
adj <- cont_usa$adjmat
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n\t\t'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
re <- paste0(base, hyper, ")")
if(covs){
mean_ <- paste0("both_covs", i, " ~ x1", i," + x2", i," + ")
}
else{
mean_ <- paste0("both", i, " 1 + ")
}
form <- formula(paste0(mean_, re))
result <- inla(form , data=cont_usa$SpatialPolygons@data,
family="poisson", control.predictor=list(compute=T))
}
run_model <- function(i, covs){
adj <- cont_usa$adjmat
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n\t\t'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
re <- paste0(base, hyper, ")")
if(covs){
mean_ <- paste0("both_covs", i, " ~ x1", i," + x2", i," + ")
}
else{
mean_ <- paste0("both", i, " 1 + ")
}
form <- formula(paste0(mean_, re))
result <- inla(form , data=cont_usa$SpatialPolygons@data,
family="poisson", control.predictor=list(compute=T))
result
}
run_model(1, T)
run_model <- function(i, covs){
adj <- cont_usa$adjmat
base <- 'f(ID, model = "bym2", scale.model=T, constr=T, graph=adj, '
phi_str <- 'phi=list(prior ="pc", param=c(0.5, 2/3), initial=-3), \n\t\t'
prec_str <- 'prec=list(prior="pc.prec", initial=5, param=c(0.2/0.31, 0.01))'
hyper <- paste0('\n hyper=list(', phi_str, prec_str, ")")
re <- paste0(base, hyper, ")")
if(covs){
mean_ <- paste0("both_covs", i, " ~ x1", i," + x2", i," + ")
}
else{
mean_ <- paste0("both", i, " 1 + ")
}
form <- formula(paste0(mean_, re))
result <- inla(form , data=cont_usa$SpatialPolygons@data,
family="poisson", control.predictor=list(compute=T))
result
}
run_model(1, T)
summary(run_model(1, T))
sim_num=10
spat_text="spatial"
od_text="overdispersion"
spplot(cont_usa$SpatialPolygons, paste0("u", sim_num), main=spat_text)
spplot(cont_usa$SpatialPolygons, paste0("v", sim_num), main=od_text)
model <- run_model(1, T)
model$marginals.fixed
model$summary.fixed
model$summary.fixed$mean
model$summary.fixed[,"0.5quant"]
model$all.hyper
model$summary.random
model$summary.hyperpar
model$summary.hyperpar[2,"0.5quant"]
model$summary.fitted.values
model$summary.fitted.values[,"0.5quant"]
print(model$summary.fitted.values[,"0.5quant"])
round(model$summary.fitted.values[,"0.5quant"])
